name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Output npm install debug log
        if: failure()
        run: cat /home/runner/.npm/_logs/*-debug-0.log

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Set HEADLESS environment variable
        run: echo "HEADLESS=true" >> $GITHUB_ENV

      - name: Verify HEADLESS environment variable
        run: echo "HEADLESS is set to $HEADLESS"

      - name: Run tests
        run: npx playwright test --reporter=line,allure-playwright

      - name: Generate Allure report
        run: npx allure generate allure-results --clean -o allure-report

      - name: Verify allure-report.zip exists
        run: |
          zip -r allure-report.zip allure-report
          ls -l allure-report.zip

      - name: Archive Allure report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report

      - name: Upload Playwright logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-logs
          path: test-results/

      # Commented out Slack and email until they are set up
      # - name: Send email with Allure report
      #   env:
      #     EMAIL_RECIPIENTS: ${{ secrets.EMAIL_RECIPIENTS }}
      #     EMAIL_SMTP_SERVER: ${{ secrets.EMAIL_SMTP_SERVER }}
      #     EMAIL_SMTP_PORT: ${{ secrets.EMAIL_SMTP_PORT }}
      #     EMAIL_SMTP_USER: ${{ secrets.EMAIL_SMTP_USER }}
      #     EMAIL_SMTP_PASS: ${{ secrets.EMAIL_SMTP_PASS }}
      #   run: node send-email.js

      # - name: Send Slack notification
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #   run: node notify-slack.js "Build Status" "All tests passed successfully."